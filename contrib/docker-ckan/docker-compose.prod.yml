x-aws-loadbalancer: "MDEP-Staging-ALB"
x-aws-cloudformation:
  Resources:
    CkanTCP80Listener:
      Properties:
        DefaultActions:
          - ForwardConfig:
              TargetGroups:
                - TargetGroupArn:
                    Ref: CkanTCP80TargetGroup
            Type: forward
        Certificates:
          - CertificateArn: "${CERT_ARN}"
        Protocol: HTTPS
        Port: 443
      Type: AWS::ElasticLoadBalancingV2::Listener
    # compose ecs integration doesn't handle 0 min percent for update config.
    CkanworkerService:
      Properties:
        DeploymentConfiguration:
          MaximumPercent: 100
          MinimumHealthyPercent: 0

services:
  ckan:
    ports:
      # use NGINX port mapping here so that the target group CkanTCP80TargetGroup
      # is correctly configured to point to the right ports. We later inject the
      # NGINX sidecar and replace this port to point to CKAN's port, and also point
      # the target group to the injected NGINX container instead.
      - "${NGINX_PORT_HOST}:${NGINX_PORT}"
    x-aws-role: &ckan-role
      Version: "2012-10-17"
      Statement:
        - Sid: S3Access
          Effect: Allow
          Action:
            - s3:*
            - s3-object-lambda:*
          Resource:
            - "arn:aws:s3:::${CKAN_SMDH__AWS_STORAGE_BUCKET_NAME}/*"
            - "arn:aws:s3:${CKANEXT__DATASCI_SHARING__BUCKET_REGION}:${AWS_ACCOUNT_ID}:accesspoint/${CKAN_SMDH__AWS_STORAGE_BUCKET_NAME}*"
        - Sid: LambdaInvoke
          Effect: Allow
          Action: [lambda:InvokeFunction]
          Resource:
            - "arn:aws:lambda:eu-west-1:${AWS_ACCOUNT_ID}:function:GetShortGroup"
        - Sid: SQSResourceManagement
          Effect: Allow
          Action: [sqs:*]
          Resource:
            - "arn:aws:sqs:${CKANEXT__CLOUDSTORAGE__SYNC__QUEUE_REGION}:${AWS_ACCOUNT_ID}:${CKANEXT__CLOUDSTORAGE__SYNC__QUEUE_NAME}"

  ckan-worker:
    x-aws-role: *ckan-role
