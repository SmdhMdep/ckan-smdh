version: "3.8"

volumes:
  ckan_storage:
    driver_opts:
      uid: 0
      gid: 0
  pg_data:
    driver_opts:
      uid: 0
      gid: 0
  solr_data:
    driver_opts:
      uid: 0
      gid: 0
  redis_data:
    driver_opts:
      uid: 0
      gid: 0

services:
  ckan:
    container_name: ${CKAN_CONTAINER_NAME}
    image: ${INTERNAL_REG}/mdepckan/ckan-deploy:latest
    deploy:
      update_config:
        x-aws-min_percent: 50
        x-aws-max_percent: 200
      # replicas: 2
      resources:
          limits:
            cpus: '2'
            memory: 16GB
      x-aws-autoscaling:
        min: 2
        max: 4
        cpu: 75
    env_file:
      - .env
    networks:
      - ckan-internal
    depends_on:
      db:
        condition: service_healthy
      solr:
        condition: service_healthy
      redis:
        condition: service_healthy

    volumes:
      - ckan_storage:/var/lib/ckan
    # restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "${CKAN_SITE_URL}/api/3/action/license_list"]
    ports:
      - target: "${CKAN_PORT_HOST}"
        x-aws-protocol: http
    
  datapusher:
    container_name: ${DATAPUSHER_CONTAINER_NAME}
    image: ckan/ckan-base-datapusher:${DATAPUSHER_VERSION}
    deploy:
      update_config:
        x-aws-min_percent: 50
        x-aws-max_percent: 200
      resources:
          limits:
            cpus: '1'
            memory: 4GB
    # restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "${CKAN_DATAPUSHER_URL}"]
    networks:
      - ckan-internal

  db:
    container_name: ${POSTGRESQL_CONTAINER_NAME}
    image: ${INTERNAL_REG}/mdepckan/ckan-postgresql:latest
    deploy:
      update_config:
        x-aws-min_percent: 50
        x-aws-max_percent: 200
      resources:
          limits:
            cpus: '2'
            memory: 8GB
    environment:
      - DATASTORE_READONLY_PASSWORD=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/db
    volumes:
      - pg_data:/var/lib/postgresql/data
    # restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ckan"]
    networks:
      - ckan-internal
     
  solr:
    container_name: ${SOLR_CONTAINER_NAME}
    image: ckan/ckan-solr:${SOLR_IMAGE_VERSION}
    deploy:
      resources:
          limits:
            cpus: '2'
            memory: 16GB
      update_config:
        x-aws-min_percent: 50
        x-aws-max_percent: 200
    networks:
      - ckan-internal
    # restart: unless-stopped
    volumes:
      - solr_data:/var/solr
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]

  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: redis:${REDIS_VERSION}
    # user: "redis:redis"
    deploy:
      update_config:
        x-aws-min_percent: 50
        x-aws-max_percent: 200
      resources:
          limits:
            cpus: '1'
            memory: 4GB
    # restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]
    networks:
      - ckan-internal
    volumes:
      - redis_data:/data

networks:
    ckan-internal:
      external: false
