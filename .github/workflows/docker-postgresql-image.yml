name: Create Postgresql image

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - 'contrib/docker-ckan-postgresql/**'

jobs:

  build-postgresql-image:

    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:

      - name: Checkout repo          
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
        
      - name : Docker Metadata
      # IDs are necessary when we need to reference this step from another step
        id: docker_meta
        uses: docker/metadata-action@v3.3.0
        with: 
          images: |
            ${{ secrets.CONTAINER_REGISTRY_URL }}/mdepckan/ckan-postgresql
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flavor: |
            latest=false 
          tags: |
            type=raw,value=latest,
            type=sha


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_OIDC }}
          aws-region: eu-west-2
          role-session-name: CKANDockerDeployment


      - name: Login into the Container Registry
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: mdepckan/ckan-postgresql
          IMAGE_TAG: ${{ steps.docker_meta.outputs.tags }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f ./contrib/docker-ckan/postgresql/Dockerfile --build-arg INTERNAL_REG=${{ steps.login-ecr.outputs.registry }}/$REPOSITORY ./contrib/docker-ckan/postgresql
        
