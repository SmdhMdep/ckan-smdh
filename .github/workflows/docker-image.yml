name: Dockerizing

on:
  workflow_run:
    workflows: [ Run Backend Tests, Test Frontend ]
    # only runs additional steps if [ tests ] was successful
    branches: [ "main" ]
    paths:
      - '.github/workflows'
      - 'dev-requirements.txt'
      - 'requirements.txt'
      - 'requirements.in'
      - 'test-core-circle-ci.ini'
      - 'test-core-cypress.ini'
      - 'test-core.ini'
      - 'wsgi.py'
      - 'ckan/**'
      - 'ckanext/**'
      - 'contrib/**'
      - 'setup.cfg'
      - 'setup.py'

    types: [ completed ]
    

jobs:

  build-base-image:

    runs-on: ubuntu-latest

    steps:
      - name: Validate prerequisites
        uses: ahmadnassri/action-workflow-run-wait@v1
        with:
          timeout: 900000 # we stop trying to check altogether after 15 mins
          delay: 300000 # we try to check the status of the prerequisite workflows after 5 mins

      - name: Checkout repo          
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login into the Container Registry
        uses: docker/login-action@v2.1.0
        with: 
          registry: ${{ secrets.CONTAINER_REGISTRY_URL }}
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
          logout: true
      
      - name : Docker Metadata
      # IDs are necessary when we need to reference this step from another step
        id: docker_meta
        uses: docker/metadata-action@v3.3.0
        with: 
          images: |
            ${{ secrets.CONTAINER_REGISTRY_URL }}/aep_ckan/ckan-smdh-base
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tags: |
            type=raw,value=latest

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./contrib/docker-ckan/base/Dockerfile
          context: .
          platforms: linux/amd64
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          # don't push the image if it's a pull request, only build it which is a way of testing if the image can be successfully built
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Show iamge digest
        run: echo ${{ steps.docker_build.outputs.digest }}
     
      
#       run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
