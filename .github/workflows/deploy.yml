name: Deploy CKAN image

on:
   workflow_dispatch:
   workflow_run:
   # only runs additional steps if [ Create Ckan Base image ] was successful
    workflows: [ Create Ckan Base image ]
    types: [ completed ]


jobs:
  deploy:
    name: Deploy to AWS ECS
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Validate prerequisites
        uses: ahmadnassri/action-workflow-run-wait@v1
        with:
          timeout: 15000 # we stop trying to check altogether after 15 secs because there is no delay set up; this prevents hanging if the workflow is cancelled
          # delay: 60000 # we try to check the status of the prerequisite workflows after 1 min
          
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::261730452028:role/OIDC_Github
          aws-region: eu-west-2
          role-session-name: CKANDockerDeployment
          
      - name: Install Docker Compose CLI
        uses: withlogicco/setup-compose-cli@v1
      
      - name: Generate Cred
        id: gen_cred
        run: |
         ls -la
         docker secret create containerRegAccessToken contrib/docker-ckan/prod/cr_cred.json
         
      - name: Update docker-compose
        run: |
         yq -yi '.services.nginx + {"x-aws-pull_credentials": ${{ steps.gen_cred.results.output }}}' ./ckan-smdh/contrib/docker-ckan/docker-compose.yml
         cat contrib/docker-ckan/docker-compose.yml
         
      - run: |
         docker context create ecs --help
         docker context create ecs ckan-ecs --from-env
         docker context ls
