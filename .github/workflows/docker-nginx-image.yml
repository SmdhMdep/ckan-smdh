name: Create Nginx image

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - 'contrib/docker-ckan/nginx/**'

jobs:
  build-Nginx-image:
    runs-on: ubuntu-latest

    steps:
      - name: Validate prerequisites
        uses: ahmadnassri/action-workflow-run-wait@v1
        with:
          timeout: 600000 # we stop trying to check altogether after 10 mins
          # delay: 60000 # we try to check the status of the prerequisite workflows after 1 min
      
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
        
      - name : Docker Metadata
      # IDs are necessary when we need to reference this step from another step
        id: docker_meta
        uses: docker/metadata-action@v3.3.0
        with: 
          images: |
            ${{ secrets.CONTAINER_REGISTRY_URL }}/mdepckan/ckan-nginx
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flavor: |
            latest=false 
          tags: |
            type=raw,value=latest,
            type=sha


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_OIDC }}
          aws-region: eu-west-2
          role-session-name: CKANDockerDeployment


      - name: Login into the Container Registry
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: mdepckan/ckan-nginx
          IMAGE_TAG: ${{ steps.docker_meta.outputs.tags }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f ./contrib/docker-ckan/nginx/Dockerfile --build-arg INTERNAL_REG=${{ steps.login-ecr.outputs.registry }}/$REPOSITORY ./contrib/docker-ckan/nginx
