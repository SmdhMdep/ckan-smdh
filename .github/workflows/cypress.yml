name: Test Frontend
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  NODE_VERSION: "16"
  PYTHON_VERSION: "3.7"
  CKAN_DATASTORE_POSTGRES_DB: datastore_test
  CKAN_DATASTORE_POSTGRES_READ_USER: datastore_read
  CKAN_DATASTORE_POSTGRES_READ_PWD: pass
  CKAN_DATASTORE_POSTGRES_WRITE_USER: datastore_write
  CKAN_DATASTORE_POSTGRES_WRITE_PWD: pass
  CKAN_POSTGRES_DB: ckan_test
  CKAN_POSTGRES_USER: ckan_default
  CKAN_POSTGRES_PWD: pass
  PGPASSWORD: ckan
  CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@localhost/ckan_test
  CKAN_SOLR_URL: http://localhost:8983/solr/ckan
  CKAN_REDIS_URL: redis://localhost:6379/1

permissions: 
  contents: read
  
jobs:
  cypress: 
    runs-on: ubuntu-20.04
    container: python:3-stretch
    
    services:
      ckan-postgres:
        image: postgres:10
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: ckan_default
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: ckan_test

      ckan-redis:
        image: redis:3
        ports:
          - 6379:6379
      

    steps:
      
      - uses: actions/checkout@v3
      
#       - uses: actions/setup-python@v2
#         with:
#           python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: | 
          # OS Dependencies
          #apt update
          apt-get update -y
          curl -sL https://deb.nodesource.com/setup_10.x | bash -
          apt install -y nodejs
          apt install -y libgtk2.0-0 libgtk-3-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
          npm install
          apt-get install -y postgresql-client solr-jetty openjdk-8-jdk
          
          # CkAN dependencies
          pip install -r requirement-setuptools.txt
          pip install -r requirements.txt
          pip install -r dev-requirements.txt
          python setup.py develop
          pip check
          
#       - uses: actions/setup-node@v2-beta
#         with:
#           node-version: ${{ env.NODE_VERSION }}

#       - name: Install python deps
#         run: pip install -r requirement-setuptools.txt -r requirements.txt -r dev-requirements.txt -e.

      - name: Init environment
        run: |
          # SOLR config
          cp ckan/config/solr/schema.xml /etc/solr/conf/schema.xml
          service jetty9 restart || true  # erroring out but does seem to work
          ckan -c test-core-cypress.ini db init
   
          
      - name: Run Cypress
        uses: cypress-io/github-action@v2
        with:
          start: ckan -c test-core-cypress.ini run

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos      
      
